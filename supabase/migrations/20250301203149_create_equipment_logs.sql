create table "public"."equipment_logs" (
    "id" bigint generated by default as identity not null,
    "equipment_id" uuid not null,
    "log_message" character varying not null,
    "log_time_utc" timestamp with time zone not null default now()
);


alter table "public"."equipment_logs" enable row level security;

CREATE UNIQUE INDEX equipment_logs_pkey ON public.equipment_logs USING btree (id);

alter table "public"."equipment_logs" add constraint "equipment_logs_pkey" PRIMARY KEY using index "equipment_logs_pkey";

alter table "public"."equipment_logs" add constraint "public_equipment_logs_equipment_id_fkey" FOREIGN KEY (equipment_id) REFERENCES equipment(id) not valid;

alter table "public"."equipment_logs" validate constraint "public_equipment_logs_equipment_id_fkey";

grant delete on table "public"."equipment_logs" to "anon";

grant insert on table "public"."equipment_logs" to "anon";

grant references on table "public"."equipment_logs" to "anon";

grant select on table "public"."equipment_logs" to "anon";

grant trigger on table "public"."equipment_logs" to "anon";

grant truncate on table "public"."equipment_logs" to "anon";

grant update on table "public"."equipment_logs" to "anon";

grant delete on table "public"."equipment_logs" to "authenticated";

grant insert on table "public"."equipment_logs" to "authenticated";

grant references on table "public"."equipment_logs" to "authenticated";

grant select on table "public"."equipment_logs" to "authenticated";

grant trigger on table "public"."equipment_logs" to "authenticated";

grant truncate on table "public"."equipment_logs" to "authenticated";

grant update on table "public"."equipment_logs" to "authenticated";

grant delete on table "public"."equipment_logs" to "service_role";

grant insert on table "public"."equipment_logs" to "service_role";

grant references on table "public"."equipment_logs" to "service_role";

grant select on table "public"."equipment_logs" to "service_role";

grant trigger on table "public"."equipment_logs" to "service_role";

grant truncate on table "public"."equipment_logs" to "service_role";

grant update on table "public"."equipment_logs" to "service_role";

create policy "SELECT equipment_logs global"
on "public"."equipment_logs"
as permissive
for select
to authenticated
using ((((auth.jwt() -> 'app_metadata'::text) -> 'globalPermissions'::text) @> '"Equipment_View"'::jsonb));



